{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","logo","options","max","height","width","src","brain","alt","paddingTop","SignIn","onEmailChange","event","console","log","target","value","setState","emailChange","onPasswordChange","passwordChange","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","props","loadUser","this","onChange","type","name","href","React","Component","Register","onNameChange","onSubmitRegister","ImageLinkForm","onInputChange","onSubmit","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","entries","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","Date","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b1c7ff17.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim white underline pa2 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link dim white underline pa2 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png'\r\nimport './Logo.css';\r\n\r\nconst logo = () =>{\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150, }} >\r\n            <div className=\"Tilt-inner\"><img src={brain} alt='logo' style={{paddingTop:'5px'}}/></div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            emailChange: '',\r\n            passwordChange: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            emailChange: event.target.value\r\n        })\r\n    }\r\n    onPasswordChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            passwordChange: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://pacific-tundra-07760.herokuapp.com/signIn', {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.emailChange,\r\n                password: this.state.passwordChange\r\n            })\r\n        })\r\n            .then(response => response.json()\r\n                .then(user => {\r\n                    console.log(user);\r\n                    if (user.id) {\r\n                        this.props.loadUser(user);\r\n                        this.props.onRouteChange('home');\r\n                    }\r\n                }))\r\n    }\r\n    render() {\r\n        const { onRouteChange } = this.props\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" >Email</label>\r\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" onClick={this.onSubmitSignIn} />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p href=\"#0\" className=\"f6 link dim black db pointer\" onClick={() => onRouteChange('register')}>Register</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name:''\r\n        }\r\n    }\r\n    onNameChange=(event)=>{\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            name:event.target.value\r\n        })\r\n    }\r\n    onEmailChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n    onPasswordChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        const{email,password,name}=this.state;\r\n        console.log(email);\r\n        console.log(password);\r\n        console.log(name);\r\n        fetch('https://pacific-tundra-07760.herokuapp.com/register', {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                name:name\r\n            })\r\n        })\r\n            .then(response => response.json()\r\n                .then(user => {\r\n                    if (user.id) {\r\n                        this.props.loadUser(user);\r\n                        this.props.onRouteChange('home');\r\n                    }\r\n                }))\r\n    }\r\n    render(){\r\n        // const {onRouteChange}= this.props;\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" >Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"name\" name=\"name\" id=\"name\"\r\n                        onChange={this.onNameChange} />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" >Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" onChange={this.onEmailChange}/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" onChange={this.onPasswordChange}/>\r\n                    </div>\r\n                    \r\n                </fieldset>\r\n                <div className=\"register\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" onClick={this.onSubmitRegister} />\r\n                </div>\r\n\r\n            </div>\r\n        </main>\r\n        </article>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange,onSubmit}) => {\r\n    return(    \r\n    <div>\r\n        <p className='f3 white'>\r\n            {'This Magic Brain will detect faces.Please give it a try!'}\r\n            <div className='center'>\r\n                <div className=' form center pa4 br2 shadow-5'>\r\n                <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link ph4 pr2 pv2 dib white bg-light-purple'onClick={onSubmit}>Detect</button>\r\n                </div>\r\n                \r\n            </div>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank =({name,entries}) =>{\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, Your Entry count is ....`}\r\n            </div>\r\n            <div className='white f3'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100\n    },\n    density: {\n      enable: true,\n      value_area: 1000\n    },\n  }\n}\n\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: new Date()\n  }\n}\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  onSubmit = () => {\n    console.log('clicked');\n    console.log(this.state.input);\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://pacific-tundra-07760.herokuapp.com/imageurl', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://pacific-tundra-07760.herokuapp.com/image', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log('Sorry not detected', err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState({\n        initialState\n      })\n    } else if (route === 'home') {\n      this.setState({\n        isSignedIn: true\n      })\n    }\n    this.setState({\n      route: route\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n          </div>\n          : (this.state.route === 'signin' ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> : (this.state.route === 'signOut') ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> :\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.3d276786.png\";"],"sourceRoot":""}